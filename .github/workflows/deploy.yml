name: Deploy React App with Terraform + S3 + CloudFrontt

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color

      - name: Output S3 bucket name and CloudFront ID
        id: terraform_outputs
        run: |
          s3_bucket_name=$(terraform output -raw s3_bucket_name | head -n1 | tr -d '\r\n')
          cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id | head -n1 | tr -d '\r\n')

          echo "s3_bucket_name=$s3_bucket_name" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=$cloudfront_distribution_id" >> $GITHUB_OUTPUT

    outputs:
      s3_bucket_name: ${{ steps.terraform_outputs.outputs.s3_bucket_name }}
      cloudfront_distribution_id: ${{ steps.terraform_outputs.outputs.cloudfront_distribution_id }}

  deploy:
    name: Build and Deploy React App
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./shopping-time
        run: npm install

      - name: Build React app
        working-directory: ./shopping-time
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync React app build to S3
        run: |
          aws s3 sync shopping-time/dist/ s3://${{ needs.terraform.outputs.s3_bucket_name }} --delete --acl public-read

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ needs.terraform.outputs.cloudfront_distribution_id }} --paths "/*"
