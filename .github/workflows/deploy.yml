name: Deploy React App with Terraform + S3 + CloudFront

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1

jobs:
  build_and_deploy:
    name: Build Infra, App & Deploy
    runs-on: ubuntu-latest

    steps:
      ## 1. Checkout
      - name: Checkout repo
        uses: actions/checkout@v3

      ## 2. Terraform Setup & Apply
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Apply
        run: |
          terraform init
          terraform apply -auto-approve -no-color

      ## 3. Export Terraform Outputs to ENV
      - name: Export bucket & distribution ID
        run: |
          BUCKET=$(terraform output -raw s3_bucket_name)
          DIST_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "S3_BUCKET_NAME=$BUCKET" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=$DIST_ID" >> $GITHUB_ENV

      ## 4. Build React App
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./shopping-time
        run: npm install

      - name: Build React app
        working-directory: ./shopping-time
        run: npm run build

      ## 5. Deploy to S3 & Invalidate Cache
      - name: Sync React app to S3
        run: |
          aws s3 sync ./shopping-time/dist/ s3://$S3_BUCKET_NAME --delete --acl public-read

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths "/*"
